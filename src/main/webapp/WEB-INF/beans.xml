<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:jaxrs="http://cxf.apache.org/jaxrs" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd"> 
    
    <!-- 
    xmlns:aop="http://www.springframework.org/schema/aop"
	#schemaLocations:
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop.xsd 
	 -->
    <context:annotation-config/>
	<context:component-scan base-package="info.rmapproject.api" />
    
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
	
    <context:property-placeholder/>
    <bean class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer"/>
    <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer"/>
		
    <bean id="discoResponseManager" class="info.rmapproject.api.responsemgr.DiscoResponseManager"/>
    <bean id="agentResponseManager" class="info.rmapproject.api.responsemgr.AgentResponseManager"/>
    <bean id="eventResponseManager" class="info.rmapproject.api.responsemgr.EventResponseManager"/>
    <bean id="statementResponseManager" class="info.rmapproject.api.responsemgr.StatementResponseManager"/>
    <bean id="resourceResponseManager" class="info.rmapproject.api.responsemgr.ResourceResponseManager"/>
	
    <jaxrs:server id="services" address="/">
        <jaxrs:serviceBeans>
            <bean class="info.rmapproject.api.service.DiSCOApiService"/>   
            <bean class="info.rmapproject.api.service.EventApiService"/>   
            <bean class="info.rmapproject.api.service.AgentApiService"/>   
            <bean class="info.rmapproject.api.service.StatementApiService"/>   
            <bean class="info.rmapproject.api.service.ResourceApiService"/>   
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
       		<bean class="info.rmapproject.api.exception.RMapApiExceptionHandler"/>
        </jaxrs:providers>
		<jaxrs:inInterceptors>
		    <ref bean="authenticationInterceptor"/>
		</jaxrs:inInterceptors>
    </jaxrs:server>
    
	<bean id="authenticationInterceptor" class="info.rmapproject.api.auth.AuthenticationInterceptor"/>   
	<bean id="apiUserService" class="info.rmapproject.api.auth.ApiUserServiceImpl"/>  
	
    <!-- 
    aspect example, in case ever want to try this...
	<aop:config>
		<aop:aspect id="loggingAspect" ref="logging">
			<aop:before method="log" pointcut="execution(* info.rmapproject.api.service.*.api*(..))"/>
		</aop:aspect>
	</aop:config>  
   <bean id="logging" 
         class="info.rmapproject.api.logging.LoggingAspect"/> -->
   <!--   
   <aop:config>
   		<aop:aspect id="sysAgentAspect" ref="checkSysAgent">
   			<aop:before method="verifyRMapSystemAgent" 
   				pointcut="execution(* info.rmap.api.responsemgr.DiscoResponseManager.*(..))"/>
   		</aop:aspect>
   </aop:config>
   <bean id="checkSysAgent" class="info.rmapproject.api.authentication.SystemAgentAspect"/>
   --> 
	
</beans>

